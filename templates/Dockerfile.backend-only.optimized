# Optimized Dockerfile for backend-only apps
# Stage 1: Dependencies (cached layer)
FROM node:18-alpine AS deps
RUN apk add --no-cache sqlite
WORKDIR /app
COPY package*.json ./
RUN npm install --only=production && npm cache clean --force

# Stage 2: Runtime
FROM node:18-alpine AS runtime
RUN apk add --no-cache sqlite
WORKDIR /app

# Create data directory for persistent storage
RUN mkdir -p /app/data

# Copy production dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy application files
COPY server.js package.json ./
{% if appFolders %}
{% for folder in appFolders %}
COPY {{ folder }}/ ./{{ folder }}/
{% endfor %}
{% endif %}

# Create volume for database persistence
VOLUME ["/app/data"]

EXPOSE 3000
CMD ["npm", "start"]