# Multi-stage optimized Dockerfile for frontend-only apps
# Stage 1: Dependencies (cached layer)
FROM node:18-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm install && npm cache clean --force

# Stage 2: Build (only rebuilds when source changes)
FROM node:18-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY index.html vite.config.js postcss.config.js ./
{% if appFolders %}
{% for folder in appFolders %}
COPY {{ folder }}/ ./{{ folder }}/
{% endfor %}
{% endif %}
RUN npm run build

# Stage 3: Runtime with serve
FROM node:18-alpine AS runtime
WORKDIR /app
RUN npm install -g serve
COPY --from=builder /app/dist ./dist

EXPOSE 3000
CMD ["serve", "-s", "dist", "-l", "3000"]